{
  "swagger": "2.0",
  "info": {
    "description": "This is a simple blog API built with Go and Gin",
    "title": "Blog API",
    "contact": {
      "name": "Michael Obeng",
      "url": "https://github.com/pandahawk",
      "email": "michael@example.com"
    },
    "version": "1.0"
  },
  "host": "localhost:8080",
  "basePath": "/api/v1",
  "paths": {
    "/users": {
      "get": {
        "description": "Get all users in the system",
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Get all users",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/user.User"
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new user and returns the created resource",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Create a new user",
        "parameters": [
          {
            "description": "User data",
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user.CreateUserRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/user.User"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {}
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/apperrors.ValidationError"
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "description": "Get the user with the specified ID",
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Get user by ID",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/user.User"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/apperrors.NotFoundError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "apperrors.NotFoundError": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "resource": {
          "type": "string"
        }
      }
    },
    "apperrors.ValidationError": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "user.CreateUserRequest": {
      "type": "object",
      "required": [
        "email",
        "username"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "user.User": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    }
  }
}