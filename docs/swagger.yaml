basePath: /api/v1
definitions:
  apperrors.NotFoundError:
    properties:
      id:
        type: string
      resource:
        type: string
    type: object
  apperrors.ValidationError:
    properties:
      messages:
        items:
          type: string
        type: array
    type: object
  user.CreateUserRequest:
    properties:
      email:
        type: string
      username:
        type: string
    required:
      - email
      - username
    type: object
  user.User:
    properties:
      email:
        type: string
      id:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: michael@example.com
    name: Michael Obeng
    url: https://github.com/pandahawk
  description: This is a simple blog API built with Go and Gin
  title: Blog API
  version: "1.0"
paths:
  /users:
    get:
      description: Get all users in the system
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user.User'
            type: array
      summary: Get all users
      tags:
        - users
    post:
      consumes:
        - application/json
      description: Creates a new user and returns the created resource
      parameters:
        - description: User data
          in: body
          name: user
          required: true
          schema:
            $ref: '#/definitions/user.CreateUserRequest'
      produces:
        - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user.User'
        "400":
          description: Bad Request
          schema: { }
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/apperrors.ValidationError'
      summary: Create a new user
      tags:
        - users
  /users/{id}:
    get:
      description: Get the user with the specified ID
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/apperrors.NotFoundError'
      summary: Get user by ID
      tags:
        - users
swagger: "2.0"
